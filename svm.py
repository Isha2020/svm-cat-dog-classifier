# -*- coding: utf-8 -*-
"""SVM.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HXhGG6yRuGrFRObRFMnPuGc1e63Rm83n
"""

from google.colab import files
files.upload()

import zipfile

with zipfile.ZipFile("data.zip.zip", 'r') as zip_ref:
    zip_ref.extractall()

import os
os.listdir()

import os
os.listdir()

os.listdir("data")

import os
import cv2
import numpy as np

IMG_SIZE = 64
CATEGORIES = ['cats', 'dogs']  # updated folder names

data = []
labels = []

for category in CATEGORIES:
    path = os.path.join("data", category)
    class_num = CATEGORIES.index(category)

    for img in os.listdir(path):
        try:
            img_array = cv2.imread(os.path.join(path, img), cv2.IMREAD_GRAYSCALE)
            resized = cv2.resize(img_array, (IMG_SIZE, IMG_SIZE))
            data.append(resized.flatten())
            labels.append(class_num)
        except Exception as e:
            print("‚ö†Ô∏è Error reading image:", e)

X = np.array(data)
y = np.array(labels)

print("‚úÖ Total images loaded:", len(X))

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

print("‚úÖ Data split done!")
print(f"Training samples: {len(X_train)}")
print(f"Testing samples: {len(X_test)}")

from sklearn.svm import SVC

model = SVC(kernel='linear')
model.fit(X_train, y_train)

print("‚úÖ SVM model trained successfully!")

from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

y_pred = model.predict(X_test)

print("‚úÖ Accuracy:", accuracy_score(y_test, y_pred))
print("\nüìä Classification Report:\n", classification_report(y_test, y_pred))
print("\nüß† Confusion Matrix:\n", confusion_matrix(y_test, y_pred))

import joblib
joblib.dump(model, "cat_dog_svm_model.pkl")

from google.colab import files
files.download("cat_dog_svm_model.pkl")

from IPython.display import clear_output
clear_output(wait=True)